# This is the backend application we are protecting with OpenID Connect
upstream my_backend {
    zone my_backend 64k;
    server 10.0.0.1:80;
}

# Custom log format to include the 'sub' claim in the REMOTE_USER field
log_format main_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

# The frontend server - reverse proxy with OpenID Connect authentication
#
server {
    include conf.d/oidc_server.conf; # Authorization code flow and Relying Party processing
    error_log   /var/log/nginx/error.log debug;  # Reduce severity level as required
    access_log  /var/log/nginx/access.log  main;

    listen      80;
    listen [::]:80; # Use SSL/TLS in production
    server_name mynginxoidc.keycloak;

    location / {
        # This site is protected with OpenID Connect
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        #auth_jwt_key_file $oidc_jwt_keyfile; # Enable when using filename
        auth_jwt_key_request /_jwks_uri; # Enable when using URL

        # Successfully authenticated users are proxied to the backend,
        # with 'sub' claim passed as HTTP header
        proxy_set_header username $jwt_claim_sub;
        # proxy_pass http://my_backend; # The backend site/app
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        access_log /var/log/nginx/access.log main_jwt;
    }
}


server {
    include conf.d/oidc_server.conf; # Authorization code flow and Relying Party processing
    error_log   /var/log/nginx/error.log debug;  # Reduce severity level as required
    access_log  /var/log/nginx/access.log  main;

    server_name mynginxoidc.aws;
    listen 443 ssl;
    ssl_certificate     /etc/controller-agent/configurator/auxfiles/mysample.crt;
    ssl_certificate_key /etc/controller-agent/configurator/auxfiles/mysample.key;
    ssl_session_cache off;
    ssl_prefer_server_ciphers off;

    location / {
        # This site is protected with OpenID Connect
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        #auth_jwt_key_file $oidc_jwt_keyfile; # Enable when using filename
        auth_jwt_key_request /_jwks_uri; # Enable when using URL

        # Successfully authenticated users are proxied to the backend,
        # with 'sub' claim passed as HTTP header
        proxy_set_header username $jwt_claim_sub;
        # proxy_pass http://my_backend; # The backend site/app
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        add_header X-Sub            $jwt_claim_sub;
        add_header X-Email          $jwt_claim_email;
        add_header X-ID-Token       $session_jwt;
        add_header X-Access-Token   $access_token;
        access_log /var/log/nginx/access.log main_jwt;
    }
}

# vim: syntax=nginx