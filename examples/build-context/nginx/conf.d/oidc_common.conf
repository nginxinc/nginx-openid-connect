# OpenID Connect configuration
#
# Each map block allows multiple values so that multiple IdPs can be supported,
# the $host variable is used as the default input parameter but can be changed.
#
map $host $oidc_authz_endpoint {
    default                 "http://my-idp:8080/auth/realms/master/protocol/openid-connect/auth";
    mynginxoidc.aws         "https://my-nginx-plus.auth.us-east-2.amazoncognito.com/oauth2/authorize";
    mynginxpkce.aws         "https://my-nginx-plus.auth.us-east-2.amazoncognito.com/oauth2/authorize";
    mynginxoidc.one         "https://my-nginx-plus.onelogin.com/oidc/2/auth";
    mynginxpkce.one         "https://my-nginx-plus.onelogin.com/oidc/2/auth";
    mynginxoidc.okta        "https://dev-9590480.okta.com/oauth2/v1/authorize";
    mynginxpkce.okta        "https://dev-9590480.okta.com/oauth2/v1/authorize";
    mynginxoidc.keycloak    "http://my-idp:8080/auth/realms/master/protocol/openid-connect/auth";
}

map $host $oidc_token_endpoint {
    default                 "http://my-idp:8080/auth/realms/master/protocol/openid-connect/token";
    mynginxoidc.aws         "https://my-nginx-plus.auth.us-east-2.amazoncognito.com/oauth2/token";
    mynginxpkce.aws         "https://my-nginx-plus.auth.us-east-2.amazoncognito.com/oauth2/token";
    mynginxoidc.one         "https://my-nginx-plus.onelogin.com/oidc/2/token";
    mynginxpkce.one         "https://my-nginx-plus.onelogin.com/oidc/2/token";
    mynginxoidc.okta        "https://dev-9590480.okta.com/oauth2/v1/token";
    mynginxpkce.okta        "https://dev-9590480.okta.com/oauth2/v1/token";
    mynginxoidc.keycloak    "http://my-idp:8080/auth/realms/master/protocol/openid-connect/token";
}

map $host $oidc_jwt_keyfile {
    default                 "http://my-idp:8080/auth/realms/master/protocol/openid-connect/certs";
    mynginxoidc.aws         "https://cognito-idp.us-east-2.amazonaws.com/us-east-2_BOsuFYRQW/.well-known/jwks.json";
    mynginxpkce.aws         "https://cognito-idp.us-east-2.amazonaws.com/us-east-2_BOsuFYRQW/.well-known/jwks.json";
    mynginxoidc.one         "https://my-nginx-plus.onelogin.com/oidc/2/certs";
    mynginxpkce.one         "https://my-nginx-plus.onelogin.com/oidc/2/certs";
    mynginxoidc.okta        "https://dev-9590480.okta.com/oauth2/v1/keys";
    mynginxpkce.okta        "https://dev-9590480.okta.com/oauth2/v1/keys";
    mynginxoidc.keycloak    "http://my-idp:8080/auth/realms/master/protocol/openid-connect/certs";
}

map $host $oidc_userinfo_endpoint {
    default                 "http://my-idp:8080/auth/realms/master/protocol/openid-connect/userinfo";
    mynginxoidc.aws         "https://my-nginx-plus.auth.us-east-2.amazoncognito.com/oauth2/userInfo";
    mynginxpkce.aws         "https://my-nginx-plus.auth.us-east-2.amazoncognito.com/oauth2/userInfo";
    mynginxoidc.one         "https://my-nginx-plus.onelogin.com/oidc/2/me";
    mynginxpkce.one         "https://my-nginx-plus.onelogin.com/oidc/2/me";
    mynginxoidc.okta        "https://dev-9590480.okta.com/oauth2/v1/userinfo";
    mynginxpkce.okta        "https://dev-9590480.okta.com/oauth2/v1/userinfo";
    mynginxoidc.keycloak    "http://my-idp:8080/auth/realms/master/protocol/openid-connect/userinfo";
}

map $host $oidc_client {
    default                 "NGINX-Plus";
    mynginxoidc.aws         "4ptsodbg185h97263piciamafd";
    mynginxpkce.aws         "3et17bfgqvdqt8ttfd9ltsbkvl";
    mynginxoidc.one         "e7793d70-f705-0139-2387-020c2f5b69a7196688";
    mynginxpkce.one         "d3eab160-f6eb-0139-0edb-0a0d6c4ed783196688";
    mynginxoidc.okta        "0oa1t5taf1zKeBgYj5d7";
    mynginxpkce.okta        "0oa1t7phfaP2GUJL95d7";
    mynginxoidc.keycloak    "NGINX-Plus";
}

map $host $oidc_pkce_enable {
    default 0;
    mynginxoidc.aws         0;
    mynginxpkce.aws         1;
    mynginxoidc.one         0;
    mynginxpkce.one         1;
    mynginxoidc.okta        0;
    mynginxpkce.okta        1;
    mynginxoidc.keycloak    0;
}

map $host $oidc_client_secret {
    default                 "600473ba-3b5e-49e9-9622-cdce800dcefa";
    mynginxoidc.aws         "u9g50f2k7kecfhussm0i5us22r3utg5ubfsckumvdk9lapk3c2";
    mynginxpkce.aws         "NA";
    mynginxoidc.one         "e436604d222d8b8f71a55aa6bf7fe2cb94db11b30920e34932d0ea8953c43e89";
    mynginxpkce.one         "NA";
    mynginxoidc.okta        "zmi-uWAmTvZKiNzMMai0tNaOQSeisA6VzMALECls";
    mynginxpkce.okta        "NA";
    mynginxoidc.keycloak    "600473ba-3b5e-49e9-9622-cdce800dcefa";
}

map $host $oidc_scopes {
    default                 "profile+email+offline_access";
    mynginxoidc.aws         "openid+profile+email";
    mynginxpkce.aws         "openid+profile+email";
    mynginxoidc.one         "openid+profile+email";
    mynginxpkce.one         "openid+profile+email";
    mynginxoidc.okta        "openid+profile+email+offline_access";
    mynginxpkce.okta        "openid+profile+email+offline_access";
    mynginxoidc.keycloak    "profile+email+offline_access";
}

map $host $oidc_logout_redirect {
    # Where to send browser after requesting /logout location. This can be
    # replaced with a custom logout page, or complete URL.
    default "/_logout"; # Built-in, simple logout page
}

map $host $oidc_hmac_key {
    # This should be unique for every NGINX instance/cluster
    default "ChangeMe";
    mynginxoidc.aws         "my-oidc-hmac-key-aws";
    mynginxpkce.aws         "my-pkce-hmac-key-aws";
    mynginxoidc.one         "my-oidc-hmac-key-onelogin";
    mynginxpkce.one         "my-pkce-hmac-key-onelogin";
    mynginxoidc.okta        "my-oidc-hmac-key-okta";
    mynginxpkce.okta        "my-pkce-hmac-key-okta";
    mynginxoidc.keycloak    "my-oidc-hmac-key-keycloak";
}

map $proto $oidc_cookie_flags {
    http  "Path=/; SameSite=lax;"; # For HTTP/plaintext testing
    https "Path=/; SameSite=lax; HttpOnly; Secure;"; # Production recommendation
}

map $http_x_forwarded_port $redirect_base {
    ""      $proto://$host:$server_port;
    default $proto://$host:$http_x_forwarded_port;
}

map $http_x_forwarded_proto $proto {
    ""      $scheme;
    default $http_x_forwarded_proto;
}

# ADVANCED CONFIGURATION BELOW THIS LINE
# Additional advanced configuration (server context) in oidc_server.conf

# JWK Set will be fetched from $oidc_jwks_uri and cached here - ensure writable by nginx user
proxy_cache_path /var/cache/nginx/jwk levels=1 keys_zone=jwk:64k max_size=1m;

# Key/Value store for ID token, access token and refresh token.
# Change timeout values to at least the validity period of each token type
keyval_zone zone=oidc_id_tokens:1M       state=conf.d/oidc_id_tokens.json      timeout=1h;
keyval_zone zone=oidc_access_tokens:1M   state=conf.d/oidc_access_tokens.json  timeout=1h;
keyval_zone zone=refresh_tokens:1M       state=conf.d/oidc_refresh_tokens.json timeout=8h;

# Temporary storage for PKCE code verifier.
keyval_zone zone=oidc_pkce:128K                                                timeout=90s;

keyval $cookie_auth_token $session_jwt        zone=oidc_id_tokens;       # Exchange cookie for ID      token
keyval $cookie_auth_token $access_token       zone=oidc_access_tokens;   # Exchange cookie for access  token
keyval $cookie_auth_token $refresh_token      zone=refresh_tokens;       # Exchange cookie for refresh token
keyval $request_id        $new_session        zone=oidc_id_tokens;       # For initial session creation for ID token
keyval $request_id        $new_access_token   zone=oidc_access_tokens;   # For initial session creation for access token
keyval $request_id        $new_refresh        zone=refresh_tokens;       # ''
keyval $pkce_id           $pkce_code_verifier zone=oidc_pkce;

auth_jwt_claim_set $jwt_audience aud; # In case aud is an array
js_import oidc from conf.d/oidc.js;

# vim: syntax=nginx